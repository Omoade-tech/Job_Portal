{
    "sourceFile": "Backend/app/Models/Employer.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1736493341777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736495445680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,31 +28,10 @@\n         'state',\n         'country',\n     ];\n \n+    \n     /**\n-     * Automatically hash the password before saving.\n-     *\n-     * @param string $value\n-     * @return void\n-     */\n-    public function setPasswordAttribute($value)\n-    {\n-        $this->attributes['password'] = bcrypt($value);\n-    }\n-\n-    /**\n-     * Automatically hash the confirmPassword before saving.\n-     *\n-     * @param string $value\n-     * @return void\n-     */\n-    public function setConfirmPasswordAttribute($value)\n-    {\n-        $this->attributes['confirmPassword'] = bcrypt($value);\n-    }\n-\n-    /**\n      * Get the full address of the employer.\n      *\n      * @return string\n      */\n"
                },
                {
                    "date": 1736495453942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,40 +29,8 @@\n         'country',\n     ];\n \n     \n-    /**\n-     * Get the full address of the employer.\n-     *\n-     * @return string\n-     */\n-    public function getFullAddressAttribute()\n-    {\n-        return \"{$this->address}, {$this->city}, {$this->state}, {$this->country}\";\n     }\n \n-    /**\n-     * Scope to filter employers by status.\n-     *\n-     * @param \\Illuminate\\Database\\Eloquent\\Builder $query\n-     * @param string $status\n-     * @return \\Illuminate\\Database\\Eloquent\\Builder\n-     */\n-    public function scopeByStatus($query, $status)\n-    {\n-        return $query->where('status', $status);\n-    }\n-\n-    /**\n-     * Scope to filter employers by city.\n-     *\n-     * @param \\Illuminate\\Database\\Eloquent\\Builder $query\n-     * @param string $city\n-     * @return \\Illuminate\\Database\\Eloquent\\Builder\n-     */\n-    public function scopeByCity($query, $city)\n-    {\n-        return $query->where('city', $city);\n-    }\n-\n   \n }\n"
                },
                {
                    "date": 1736507622525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,14 @@\n         'city',\n         'state',\n         'country',\n     ];\n-\n+    public function tokens()        \n+    {\n+        return $this->hasMany(Token::class);\n+    }\n+ \n     \n     }\n \n   \n-}\n+\n"
                },
                {
                    "date": 1736507641144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n use Illuminate\\Database\\Eloquent\\Model;\n \n class Employer extends Model\n {\n-    \n+    use HasApiTokens;\n     use HasFactory;\n \n     /**\n      * The attributes that are mass assignable.\n"
                }
            ],
            "date": 1736493341777,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Employer extends Model\n{\n    use HasFactory;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'role',\n        'name',\n        'email',\n        'password',\n        'phoneNumber',\n        'age',\n        'sex',\n        'status',\n        'address',\n        'city',\n        'state',\n        'country',\n    ];\n\n    /**\n     * Automatically hash the password before saving.\n     *\n     * @param string $value\n     * @return void\n     */\n    public function setPasswordAttribute($value)\n    {\n        $this->attributes['password'] = bcrypt($value);\n    }\n\n    /**\n     * Automatically hash the confirmPassword before saving.\n     *\n     * @param string $value\n     * @return void\n     */\n    public function setConfirmPasswordAttribute($value)\n    {\n        $this->attributes['confirmPassword'] = bcrypt($value);\n    }\n\n    /**\n     * Get the full address of the employer.\n     *\n     * @return string\n     */\n    public function getFullAddressAttribute()\n    {\n        return \"{$this->address}, {$this->city}, {$this->state}, {$this->country}\";\n    }\n\n    /**\n     * Scope to filter employers by status.\n     *\n     * @param \\Illuminate\\Database\\Eloquent\\Builder $query\n     * @param string $status\n     * @return \\Illuminate\\Database\\Eloquent\\Builder\n     */\n    public function scopeByStatus($query, $status)\n    {\n        return $query->where('status', $status);\n    }\n\n    /**\n     * Scope to filter employers by city.\n     *\n     * @param \\Illuminate\\Database\\Eloquent\\Builder $query\n     * @param string $city\n     * @return \\Illuminate\\Database\\Eloquent\\Builder\n     */\n    public function scopeByCity($query, $city)\n    {\n        return $query->where('city', $city);\n    }\n\n  \n}\n"
        }
    ]
}