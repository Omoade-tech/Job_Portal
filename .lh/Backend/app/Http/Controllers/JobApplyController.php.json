{
    "sourceFile": "Backend/app/Http/Controllers/JobApplyController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1736419384510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736419405949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         try {\r\n             $validatedData = $request->validate([\r\n                 'coverLetter' => 'required|string|min:20',\r\n                 'resume' => 'required|file|mimes:pdf|max:2048',\r\n-                'job_portals_id' => 'required|exists:job_portals,id', // Validate jobPortal_id\r\n+                'job_portals_id' => 'required|exists:job_portals,id', \r\n             ]);\r\n \r\n             $jobapply = JobApply::findOrFail($id);\r\n \r\n"
                },
                {
                    "date": 1736419425334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         try {\r\n             $validatedData = $request->validate([\r\n                 'coverLetter' => 'required|string|min:20',\r\n                 'resume' => 'required|file|mimes:pdf|max:2048',\r\n-                'job_portals_id' => 'required|exists:job_portals,id', // Validate jobPortal_id\r\n+                'job_portals_id' => 'required|exists:job_portals,id', \r\n             ]);\r\n \r\n             // Handle file upload\r\n             if ($request->hasFile('resume')) {\r\n"
                },
                {
                    "date": 1736419444221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n     public function show($id)\r\n     {\r\n         try {\r\n-            $jobapply = JobApply::with('jobPortal')->findOrFail($id); // Replaced reference with jobPortal\r\n+            $jobapply = JobApply::with('jobPortal')->findOrFail($id); \r\n             return response()->json(['success' => true, 'data' => $jobapply], 200);\r\n         } catch (\\Exception $e) {\r\n             return response()->json(['success' => false, 'message' => 'Job application not found.'], 404);\r\n         }\r\n"
                },
                {
                    "date": 1736419457818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n {\r\n     public function index()\r\n     {\r\n         try {\r\n-            $jobsapply = JobApply::with('jobPortal')->latest()->get(); // Replaced reference with jobPortal\r\n+            $jobsapply = JobApply::with('jobPortal')->latest()->get(); \r\n             return response()->json(['success' => true, 'data' => $jobsapply], 200);\r\n         } catch (\\Exception $e) {\r\n             return response()->json(['success' => false, 'message' => $e->getMessage()], 500);\r\n         }\r\n"
                },
                {
                    "date": 1736427127188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n namespace App\\Http\\Controllers;\r\n \r\n use App\\Http\\Controllers\\Controller;\r\n use App\\Models\\JobApply;\r\n-\r\n+uu\r\n use Illuminate\\Http\\Request;\r\n \r\n class JobApplyController extends Controller\r\n {\r\n"
                }
            ],
            "date": 1736419384510,
            "name": "Commit-0",
            "content": "<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse App\\Http\\Controllers\\Controller;\r\nuse App\\Models\\JobApply;\r\nuse Illuminate\\Http\\Request;\r\n\r\nclass JobApplyController extends Controller\r\n{\r\n    public function index()\r\n    {\r\n        try {\r\n            $jobsapply = JobApply::with('jobPortal')->latest()->get(); // Replaced reference with jobPortal\r\n            return response()->json(['success' => true, 'data' => $jobsapply], 200);\r\n        } catch (\\Exception $e) {\r\n            return response()->json(['success' => false, 'message' => $e->getMessage()], 500);\r\n        }\r\n    }\r\n\r\n    public function show($id)\r\n    {\r\n        try {\r\n            $jobapply = JobApply::with('jobPortal')->findOrFail($id); // Replaced reference with jobPortal\r\n            return response()->json(['success' => true, 'data' => $jobapply], 200);\r\n        } catch (\\Exception $e) {\r\n            return response()->json(['success' => false, 'message' => 'Job application not found.'], 404);\r\n        }\r\n    }\r\n\r\n    public function store(Request $request)\r\n    {\r\n        try {\r\n            $validatedData = $request->validate([\r\n                'coverLetter' => 'required|string|min:20',\r\n                'resume' => 'required|file|mimes:pdf|max:2048',\r\n                'job_portals_id' => 'required|exists:job_portals,id', // Validate jobPortal_id\r\n            ]);\r\n\r\n            // Handle file upload\r\n            if ($request->hasFile('resume')) {\r\n                $validatedData['resume'] = $request->file('resume')->store('resumes', 'public');\r\n            }\r\n\r\n            $jobapply = JobApply::create($validatedData);\r\n\r\n            return response()->json(['success' => true, 'data' => $jobapply], 201);\r\n        } catch (\\Illuminate\\Validation\\ValidationException $e) {\r\n            return response()->json(['success' => false, 'errors' => $e->errors()], 422);\r\n        } catch (\\Exception $e) {\r\n            return response()->json(['success' => false, 'message' => $e->getMessage()], 500);\r\n        }\r\n    }\r\n\r\n    public function update(Request $request, $id)\r\n    {\r\n        try {\r\n            $validatedData = $request->validate([\r\n                'coverLetter' => 'required|string|min:20',\r\n                'resume' => 'required|file|mimes:pdf|max:2048',\r\n                'job_portals_id' => 'required|exists:job_portals,id', // Validate jobPortal_id\r\n            ]);\r\n\r\n            $jobapply = JobApply::findOrFail($id);\r\n\r\n            // Handle file upload if provided\r\n            if ($request->hasFile('resume')) {\r\n                $validatedData['resume'] = $request->file('resume')->store('resumes', 'public');\r\n            }\r\n\r\n            $jobapply->update($validatedData);\r\n\r\n            return response()->json(['success' => true, 'data' => $jobapply], 200);\r\n        } catch (\\Illuminate\\Validation\\ValidationException $e) {\r\n            return response()->json(['success' => false, 'errors' => $e->errors()], 422);\r\n        } catch (\\Exception $e) {\r\n            return response()->json(['success' => false, 'message' => $e->getMessage()], 500);\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}