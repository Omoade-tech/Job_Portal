{
    "sourceFile": "fontend/src/views/JobDetails.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1736346409079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736346627567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,138 +1,286 @@\n <template>\r\n-  \r\n-    <div class=\"life\">\r\n-      <div id=\"job-container\" class=\"container mt-4\">\r\n-        <!-- Loading State -->\r\n-        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n-  \r\n-        <!-- Job Cards -->\r\n-        <div v-else>\r\n-          <div class=\"row\">\r\n-            <div\r\n-              v-for=\"job in jobs\"\r\n-              :key=\"job.id\"\r\n-              class=\"col-md-4 mb-4\"\r\n-            >\r\n-              <div class=\"card h-100\">\r\n-                <!-- Card Header -->\r\n-                <div class=\"card-header d-flex align-items-center\">\r\n-                  <img\r\n-                    :src=\"job.companyLogo\"\r\n-                    :alt=\"`${job.companyLogo} logo`\"\r\n-                    class=\"job-logo me-3\"\r\n-                  />\r\n-                  <div>\r\n-                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n-                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n-                  </div>\r\n+  <div class=\"life\">\r\n+    <div id=\"job-container\" class=\"container mt-4\">\r\n+      <!-- Search and Filter Section -->\r\n+      <div class=\"row mb-4\">\r\n+        <div class=\"col-md-4\">\r\n+          <input\r\n+            v-model=\"searchQuery\"\r\n+            type=\"text\"\r\n+            class=\"form-control\"\r\n+            placeholder=\"Search jobs...\"\r\n+            @input=\"handleSearch\"\r\n+          />\r\n+        </div>\r\n+        <div class=\"col-md-3\">\r\n+          <select v-model=\"locationFilter\" class=\"form-select\" @change=\"handleFilters\">\r\n+            <option value=\"\">All Locations</option>\r\n+            <option v-for=\"location in uniqueLocations\" :key=\"location\" :value=\"location\">\r\n+              {{ location }}\r\n+            </option>\r\n+          </select>\r\n+        </div>\r\n+        <div class=\"col-md-3\">\r\n+          <select v-model=\"contractFilter\" class=\"form-select\" @change=\"handleFilters\">\r\n+            <option value=\"\">All Contract Types</option>\r\n+            <option v-for=\"contract in uniqueContracts\" :key=\"contract\" :value=\"contract\">\r\n+              {{ contract }}\r\n+            </option>\r\n+          </select>\r\n+        </div>\r\n+        <div class=\"col-md-2\">\r\n+          <button class=\"btn btn-secondary w-100\" @click=\"resetFilters\">\r\n+            Reset Filters\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <!-- Loading State -->\r\n+      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n+\r\n+      <!-- Job Cards -->\r\n+      <div v-else>\r\n+        <div class=\"row\">\r\n+          <div\r\n+            v-for=\"job in paginatedJobs\"\r\n+            :key=\"job.id\"\r\n+            class=\"col-md-4 mb-4\"\r\n+          >\r\n+            <div class=\"card h-100\">\r\n+              <!-- Card Header -->\r\n+              <div class=\"card-header d-flex align-items-center\">\r\n+                <img\r\n+                  :src=\"job.companyLogo\"\r\n+                  :alt=\"`${job.companyLogo} logo`\"\r\n+                  class=\"job-logo me-3\"\r\n+                />\r\n+                <div>\r\n+                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n+                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n                 </div>\r\n-  \r\n-                <!-- Card Body -->\r\n-                <div class=\"card-body\">\r\n-                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n-                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n-                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n-                </div>\r\n-  \r\n-                <!-- Card Buttons -->\r\n-                <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n-                  <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n-                    Apply\r\n+              </div>\r\n+\r\n+              <!-- Card Body -->\r\n+              <div class=\"card-body\">\r\n+                <p><strong>Location:</strong> {{ job.location }}</p>\r\n+                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n+                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n+                <p><strong>Description:</strong> {{ job.description }}</p>\r\n+              </div>\r\n+\r\n+              <!-- Card Buttons -->\r\n+              <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n+                <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n+                  Apply\r\n+                </RouterLink>\r\n+\r\n+                <div>\r\n+                  <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n+                    <i class=\"bi bi-eye\"></i> View\r\n                   </RouterLink>\r\n-  \r\n-                  <div>\r\n-                \r\n-                    <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n-                    <i class=\"bi bi-eye\"></i> View\r\n-                    </RouterLink>\r\n-                    <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n-                        <i class=\"bi bi-pencil\"></i> Edit\r\n-                    </RouterLink>\r\n-                    \r\n-                   \r\n-                  </div>\r\n+                  <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n+                    <i class=\"bi bi-pencil\"></i> Edit\r\n+                  </RouterLink>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n\\ No newline at end of file\n         </div>\r\n-  \r\n-        <!-- Error State -->\r\n-        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n+\r\n+        <!-- Pagination -->\r\n+        <div class=\"d-flex justify-content-center mt-4\">\r\n+          <nav aria-label=\"Job listings pagination\">\r\n+            <ul class=\"pagination\">\r\n+              <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n+                <button class=\"page-link\" @click=\"currentPage--\" :disabled=\"currentPage === 1\">\r\n+                  Previous\r\n+                </button>\r\n+              </li>\r\n+              <li\r\n+                v-for=\"page in totalPages\"\r\n+                :key=\"page\"\r\n+                class=\"page-item\"\r\n+                :class=\"{ active: currentPage === page }\"\r\n+              >\r\n+                <button class=\"page-link\" @click=\"currentPage = page\">\r\n+                  {{ page }}\r\n+                </button>\r\n+              </li>\r\n+              <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n+                <button\r\n+                  class=\"page-link\"\r\n+                  @click=\"currentPage++\"\r\n+                  :disabled=\"currentPage === totalPages\"\r\n+                >\r\n+                  Next\r\n+                </button>\r\n+              </li>\r\n+            </ul>\r\n+          </nav>\r\n+        </div>\r\n       </div>\r\n+\r\n+      <!-- Error State -->\r\n+      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n+\r\n+      <!-- No Results -->\r\n+      <div v-if=\"!loading && filteredJobs.length === 0\" class=\"alert alert-info mt-3 text-center\">\r\n+        No jobs found matching your criteria\r\n+      </div>\r\n     </div>\r\n-  </template>\r\n-  \r\n-  <script>\r\n-  import api from \"@/services/api.js\";\r\n-  \r\n-  export default {\r\n-    data() {\r\n-      return {\r\n-        jobs: null,\r\n-        loading: false,\r\n-        error: false,\r\n-      };\r\n+  </div>\r\n+</template>\r\n+\r\n+<script>\r\n+import api from \"@/services/api.js\";\r\n+import { debounce } from 'lodash';\r\n+\r\n+export default {\r\n+  data() {\r\n+    return {\r\n+      jobs: null,\r\n+      loading: false,\r\n+      error: false,\r\n+      searchQuery: '',\r\n+      locationFilter: '',\r\n+      contractFilter: '',\r\n+      currentPage: 1,\r\n+      itemsPerPage: 6,\r\n+    };\r\n+  },\r\n+\r\n+  computed: {\r\n+    uniqueLocations() {\r\n+      return this.jobs ? [...new Set(this.jobs.map(job => job.location))].sort() : [];\r\n     },\r\n-  \r\n-    methods: {\r\n-      async fetchJobs() {\r\n-        this.loading = true;\r\n-        this.error = null;\r\n-        try {\r\n-          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-          this.jobs = response.data.data; // Access the job data\r\n-        } catch (error) {\r\n-          this.error = \"Failed to load jobs. Please try again.\";\r\n-        } finally {\r\n-          this.loading = false;\r\n-        }\r\n-      },\r\n+\r\n+    uniqueContracts() {\r\n+      return this.jobs ? [...new Set(this.jobs.map(job => job.contract))].sort() : [];\r\n     },\r\n-  \r\n-    mounted() {\r\n-      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n+\r\n+    filteredJobs() {\r\n+      if (!this.jobs) return [];\r\n+      \r\n+      return this.jobs.filter(job => {\r\n+        const matchesSearch = !this.searchQuery || \r\n+          job.companyName.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n+          job.post.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n+          job.description.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n+        \r\n+        const matchesLocation = !this.locationFilter || \r\n+          job.location === this.locationFilter;\r\n+        \r\n+        const matchesContract = !this.contractFilter || \r\n+          job.contract === this.contractFilter;\r\n+        \r\n+        return matchesSearch && matchesLocation && matchesContract;\r\n+      });\r\n     },\r\n-  };\r\n-  </script>\r\n-  \r\n-  <style scoped>\r\n-  .life {\r\n-    background-position: center;\r\n-    background-size: cover;\r\n-    background-repeat: no-repeat;\r\n+\r\n+    totalPages() {\r\n+      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\r\n+    },\r\n+\r\n+    paginatedJobs() {\r\n+      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n+      const end = start + this.itemsPerPage;\r\n+      return this.filteredJobs.slice(start, end);\r\n+    },\r\n+  },\r\n+\r\n+  methods: {\r\n+    async fetchJobs() {\r\n+      this.loading = true;\r\n+      this.error = null;\r\n+      try {\r\n+        const response = await api.getJobPortals();\r\n+        this.jobs = response.data.data;\r\n+      } catch (error) {\r\n+        this.error = \"Failed to load jobs. Please try again.\";\r\n+      } finally {\r\n+        this.loading = false;\r\n+      }\r\n+    },\r\n+\r\n+    handleSearch: debounce(function() {\r\n+      this.currentPage = 1;\r\n+    }, 300),\r\n+\r\n+    handleFilters() {\r\n+      this.currentPage = 1;\r\n+    },\r\n+\r\n+    resetFilters() {\r\n+      this.searchQuery = '';\r\n+      this.locationFilter = '';\r\n+      this.contractFilter = '';\r\n+      this.currentPage = 1;\r\n+    },\r\n+  },\r\n+\r\n+  watch: {\r\n+    filteredJobs() {\r\n+      if (this.currentPage > this.totalPages) {\r\n+        this.currentPage = Math.max(1, this.totalPages);\r\n+      }\r\n+    },\r\n+  },\r\n+\r\n+  mounted() {\r\n+    this.fetchJobs();\r\n+  },\r\n+};\r\n+</script>\r\n+\r\n+<style scoped>\r\n+.life {\r\n+  background-position: center;\r\n+  background-size: cover;\r\n+  background-repeat: no-repeat;\r\n+}\r\n+\r\n+.loading-state {\r\n+  display: flex;\r\n+  justify-content: center;\r\n+  align-items: center;\r\n+  font-size: 1rem;\r\n+}\r\n+\r\n+.job-logo {\r\n+  width: 40px;\r\n+  height: 40px;\r\n+  border-radius: 50%;\r\n+}\r\n+\r\n+.job-body {\r\n+  margin-top: 0.5rem;\r\n+}\r\n+\r\n+.card-body {\r\n+  background: #ddd;\r\n+}\r\n+\r\n+.card-btn .btn {\r\n+  font-size: 0.9rem;\r\n+  padding: 0.5rem 1rem;\r\n+}\r\n+\r\n+.error {\r\n+  color: red;\r\n+  font-weight: bold;\r\n+}\r\n+\r\n+.pagination {\r\n+  margin-bottom: 2rem;\r\n+}\r\n+\r\n+.form-control, .form-select {\r\n+  margin-bottom: 1rem;\r\n+}\r\n+\r\n+@media (min-width: 768px) {\r\n+  .form-control, .form-select {\r\n+    margin-bottom: 0;\r\n   }\r\n-  \r\n-  .loading-state {\r\n-    display: flex;\r\n-    justify-content: center;\r\n-    align-items: center;\r\n-    font-size: 1rem;\r\n-  }\r\n-  \r\n-  .job-logo {\r\n-    width: 40px;\r\n-    height: 40px;\r\n-    border-radius: 50%;\r\n-  }\r\n-  \r\n-  .job-body {\r\n-    margin-top: 0.5rem;\r\n-  }\r\n-  \r\n-  .card-body {\r\n-    background: #ddd;\r\n-  }\r\n-  \r\n-  .card-btn .btn {\r\n-    font-size: 0.9rem;\r\n-    padding: 0.5rem 1rem;\r\n-  }\r\n-  \r\n-  .error {\r\n-    color: red;\r\n-    font-weight: bold;\r\n-  }\r\n-  </style>\r\n-  \n+}\r\n+</style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736346668198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,286 +1,138 @@\n <template>\r\n-  <div class=\"life\">\r\n-    <div id=\"job-container\" class=\"container mt-4\">\r\n-      <!-- Search and Filter Section -->\r\n-      <div class=\"row mb-4\">\r\n-        <div class=\"col-md-4\">\r\n-          <input\r\n-            v-model=\"searchQuery\"\r\n-            type=\"text\"\r\n-            class=\"form-control\"\r\n-            placeholder=\"Search jobs...\"\r\n-            @input=\"handleSearch\"\r\n-          />\r\n-        </div>\r\n-        <div class=\"col-md-3\">\r\n-          <select v-model=\"locationFilter\" class=\"form-select\" @change=\"handleFilters\">\r\n-            <option value=\"\">All Locations</option>\r\n-            <option v-for=\"location in uniqueLocations\" :key=\"location\" :value=\"location\">\r\n-              {{ location }}\r\n-            </option>\r\n-          </select>\r\n-        </div>\r\n-        <div class=\"col-md-3\">\r\n-          <select v-model=\"contractFilter\" class=\"form-select\" @change=\"handleFilters\">\r\n-            <option value=\"\">All Contract Types</option>\r\n-            <option v-for=\"contract in uniqueContracts\" :key=\"contract\" :value=\"contract\">\r\n-              {{ contract }}\r\n-            </option>\r\n-          </select>\r\n-        </div>\r\n-        <div class=\"col-md-2\">\r\n-          <button class=\"btn btn-secondary w-100\" @click=\"resetFilters\">\r\n-            Reset Filters\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <!-- Loading State -->\r\n-      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n-\r\n-      <!-- Job Cards -->\r\n-      <div v-else>\r\n-        <div class=\"row\">\r\n-          <div\r\n-            v-for=\"job in paginatedJobs\"\r\n-            :key=\"job.id\"\r\n-            class=\"col-md-4 mb-4\"\r\n-          >\r\n-            <div class=\"card h-100\">\r\n-              <!-- Card Header -->\r\n-              <div class=\"card-header d-flex align-items-center\">\r\n-                <img\r\n-                  :src=\"job.companyLogo\"\r\n-                  :alt=\"`${job.companyLogo} logo`\"\r\n-                  class=\"job-logo me-3\"\r\n-                />\r\n-                <div>\r\n-                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n-                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n+  \r\n+    <div class=\"life\">\r\n+      <div id=\"job-container\" class=\"container mt-4\">\r\n+        <!-- Loading State -->\r\n+        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n+  \r\n+        <!-- Job Cards -->\r\n+        <div v-else>\r\n+          <div class=\"row\">\r\n+            <div\r\n+              v-for=\"job in jobs\"\r\n+              :key=\"job.id\"\r\n+              class=\"col-md-4 mb-4\"\r\n+            >\r\n+              <div class=\"card h-100\">\r\n+                <!-- Card Header -->\r\n+                <div class=\"card-header d-flex align-items-center\">\r\n+                  <img\r\n+                    :src=\"job.companyLogo\"\r\n+                    :alt=\"`${job.companyLogo} logo`\"\r\n+                    class=\"job-logo me-3\"\r\n+                  />\r\n+                  <div>\r\n+                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n+                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n+                  </div>\r\n                 </div>\r\n-              </div>\r\n-\r\n-              <!-- Card Body -->\r\n-              <div class=\"card-body\">\r\n-                <p><strong>Location:</strong> {{ job.location }}</p>\r\n-                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n-                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                <p><strong>Description:</strong> {{ job.description }}</p>\r\n-              </div>\r\n-\r\n-              <!-- Card Buttons -->\r\n-              <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n-                <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n-                  Apply\r\n-                </RouterLink>\r\n-\r\n-                <div>\r\n-                  <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n+  \r\n+                <!-- Card Body -->\r\n+                <div class=\"card-body\">\r\n+                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n+                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n+                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n+                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n+                </div>\r\n+  \r\n+                <!-- Card Buttons -->\r\n+                <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n+                  <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n+                    Apply\r\n+                  </RouterLink>\r\n+  \r\n+                  <div>\r\n+                \r\n+                    <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n                     <i class=\"bi bi-eye\"></i> View\r\n-                  </RouterLink>\r\n-                  <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n-                    <i class=\"bi bi-pencil\"></i> Edit\r\n-                  </RouterLink>\r\n+                    </RouterLink>\r\n+                    <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n+                        <i class=\"bi bi-pencil\"></i> Edit\r\n+                    </RouterLink>\r\n+                    \r\n+                   \r\n+                  </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n-\r\n-        <!-- Pagination -->\r\n-        <div class=\"d-flex justify-content-center mt-4\">\r\n-          <nav aria-label=\"Job listings pagination\">\r\n-            <ul class=\"pagination\">\r\n-              <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n-                <button class=\"page-link\" @click=\"currentPage--\" :disabled=\"currentPage === 1\">\r\n-                  Previous\r\n-                </button>\r\n-              </li>\r\n-              <li\r\n-                v-for=\"page in totalPages\"\r\n-                :key=\"page\"\r\n-                class=\"page-item\"\r\n-                :class=\"{ active: currentPage === page }\"\r\n-              >\r\n-                <button class=\"page-link\" @click=\"currentPage = page\">\r\n-                  {{ page }}\r\n-                </button>\r\n-              </li>\r\n-              <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n-                <button\r\n-                  class=\"page-link\"\r\n-                  @click=\"currentPage++\"\r\n-                  :disabled=\"currentPage === totalPages\"\r\n-                >\r\n-                  Next\r\n-                </button>\r\n-              </li>\r\n-            </ul>\r\n-          </nav>\r\n-        </div>\r\n+  \r\n+        <!-- Error State -->\r\n+        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n       </div>\r\n-\r\n-      <!-- Error State -->\r\n-      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n-\r\n-      <!-- No Results -->\r\n-      <div v-if=\"!loading && filteredJobs.length === 0\" class=\"alert alert-info mt-3 text-center\">\r\n-        No jobs found matching your criteria\r\n-      </div>\r\n     </div>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script>\r\n-import api from \"@/services/api.js\";\r\n-import { debounce } from 'lodash';\r\n-\r\n-export default {\r\n-  data() {\r\n-    return {\r\n-      jobs: null,\r\n-      loading: false,\r\n-      error: false,\r\n-      searchQuery: '',\r\n-      locationFilter: '',\r\n-      contractFilter: '',\r\n-      currentPage: 1,\r\n-      itemsPerPage: 6,\r\n-    };\r\n-  },\r\n-\r\n-  computed: {\r\n-    uniqueLocations() {\r\n-      return this.jobs ? [...new Set(this.jobs.map(job => job.location))].sort() : [];\r\n+  </template>\r\n+  \r\n+  <script>\r\n+  import api from \"@/services/api.js\";\r\n+  \r\n+  export default {\r\n+    data() {\r\n+      return {\r\n+        jobs: null,\r\n+        loading: false,\r\n+        error: false,\r\n+      };\r\n     },\r\n-\r\n-    uniqueContracts() {\r\n-      return this.jobs ? [...new Set(this.jobs.map(job => job.contract))].sort() : [];\r\n+  \r\n+    methods: {\r\n+      async fetchJobs() {\r\n+        this.loading = true;\r\n+        this.error = null;\r\n+        try {\r\n+          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n+          this.jobs = response.data.data; // Access the job data\r\n+        } catch (error) {\r\n+          this.error = \"Failed to load jobs. Please try again.\";\r\n+        } finally {\r\n+          this.loading = false;\r\n+        }\r\n+      },\r\n     },\r\n-\r\n-    filteredJobs() {\r\n-      if (!this.jobs) return [];\r\n-      \r\n-      return this.jobs.filter(job => {\r\n-        const matchesSearch = !this.searchQuery || \r\n-          job.companyName.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n-          job.post.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n-          job.description.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n-        \r\n-        const matchesLocation = !this.locationFilter || \r\n-          job.location === this.locationFilter;\r\n-        \r\n-        const matchesContract = !this.contractFilter || \r\n-          job.contract === this.contractFilter;\r\n-        \r\n-        return matchesSearch && matchesLocation && matchesContract;\r\n-      });\r\n+  \r\n+    mounted() {\r\n+      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n     },\r\n-\r\n-    totalPages() {\r\n-      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\r\n-    },\r\n-\r\n-    paginatedJobs() {\r\n-      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n-      const end = start + this.itemsPerPage;\r\n-      return this.filteredJobs.slice(start, end);\r\n-    },\r\n-  },\r\n-\r\n-  methods: {\r\n-    async fetchJobs() {\r\n-      this.loading = true;\r\n-      this.error = null;\r\n-      try {\r\n-        const response = await api.getJobPortals();\r\n-        this.jobs = response.data.data;\r\n-      } catch (error) {\r\n-        this.error = \"Failed to load jobs. Please try again.\";\r\n-      } finally {\r\n-        this.loading = false;\r\n-      }\r\n-    },\r\n\\ No newline at end of file\n-\r\n-    handleSearch: debounce(function() {\r\n-      this.currentPage = 1;\r\n-    }, 300),\r\n-\r\n-    handleFilters() {\r\n-      this.currentPage = 1;\r\n-    },\r\n-\r\n-    resetFilters() {\r\n-      this.searchQuery = '';\r\n-      this.locationFilter = '';\r\n-      this.contractFilter = '';\r\n-      this.currentPage = 1;\r\n-    },\r\n-  },\r\n-\r\n-  watch: {\r\n-    filteredJobs() {\r\n-      if (this.currentPage > this.totalPages) {\r\n-        this.currentPage = Math.max(1, this.totalPages);\r\n-      }\r\n-    },\r\n-  },\r\n-\r\n-  mounted() {\r\n-    this.fetchJobs();\r\n-  },\r\n-};\r\n-</script>\r\n-\r\n-<style scoped>\r\n-.life {\r\n-  background-position: center;\r\n-  background-size: cover;\r\n-  background-repeat: no-repeat;\r\n-}\r\n-\r\n-.loading-state {\r\n-  display: flex;\r\n-  justify-content: center;\r\n-  align-items: center;\r\n-  font-size: 1rem;\r\n-}\r\n-\r\n-.job-logo {\r\n-  width: 40px;\r\n-  height: 40px;\r\n-  border-radius: 50%;\r\n-}\r\n-\r\n-.job-body {\r\n-  margin-top: 0.5rem;\r\n-}\r\n-\r\n-.card-body {\r\n-  background: #ddd;\r\n-}\r\n-\r\n-.card-btn .btn {\r\n-  font-size: 0.9rem;\r\n-  padding: 0.5rem 1rem;\r\n-}\r\n-\r\n-.error {\r\n-  color: red;\r\n-  font-weight: bold;\r\n-}\r\n-\r\n-.pagination {\r\n-  margin-bottom: 2rem;\r\n-}\r\n-\r\n-.form-control, .form-select {\r\n-  margin-bottom: 1rem;\r\n-}\r\n-\r\n-@media (min-width: 768px) {\r\n-  .form-control, .form-select {\r\n-    margin-bottom: 0;\r\n+  };\r\n+  </script>\r\n+  \r\n+  <style scoped>\r\n+  .life {\r\n+    background-position: center;\r\n+    background-size: cover;\r\n+    background-repeat: no-repeat;\r\n   }\r\n-}\r\n-</style>\n+  \r\n+  .loading-state {\r\n+    display: flex;\r\n+    justify-content: center;\r\n+    align-items: center;\r\n+    font-size: 1rem;\r\n+  }\r\n+  \r\n+  .job-logo {\r\n+    width: 40px;\r\n+    height: 40px;\r\n+    border-radius: 50%;\r\n+  }\r\n+  \r\n+  .job-body {\r\n+    margin-top: 0.5rem;\r\n+  }\r\n+  \r\n+  .card-body {\r\n+    background: #ddd;\r\n+  }\r\n+  \r\n+  .card-btn .btn {\r\n+    font-size: 0.9rem;\r\n+    padding: 0.5rem 1rem;\r\n+  }\r\n+  \r\n+  .error {\r\n+    color: red;\r\n+    font-weight: bold;\r\n+  }\r\n+  </style>\r\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1736346898239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,138 +1,347 @@\n <template>\r\n-  \r\n-    <div class=\"life\">\r\n-      <div id=\"job-container\" class=\"container mt-4\">\r\n-        <!-- Loading State -->\r\n-        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n-  \r\n-        <!-- Job Cards -->\r\n-        <div v-else>\r\n-          <div class=\"row\">\r\n-            <div\r\n-              v-for=\"job in jobs\"\r\n-              :key=\"job.id\"\r\n-              class=\"col-md-4 mb-4\"\r\n-            >\r\n-              <div class=\"card h-100\">\r\n-                <!-- Card Header -->\r\n-                <div class=\"card-header d-flex align-items-center\">\r\n-                  <img\r\n-                    :src=\"job.companyLogo\"\r\n-                    :alt=\"`${job.companyLogo} logo`\"\r\n-                    class=\"job-logo me-3\"\r\n-                  />\r\n-                  <div>\r\n-                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n-                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n-                  </div>\r\n+  <div class=\"life\">\r\n+    <div id=\"job-container\" class=\"container mt-4\">\r\n+      <!-- Loading State -->\r\n+      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n+\r\n+      <!-- Job Cards -->\r\n+      <div v-else>\r\n+        <div class=\"row\">\r\n+          <div\r\n+            v-for=\"job in paginatedJobs\"\r\n+            :key=\"job.id\"\r\n+            class=\"col-md-4 mb-4\"\r\n+          >\r\n+            <div class=\"card h-100\">\r\n+              <!-- Card Header -->\r\n+              <div class=\"card-header d-flex align-items-center\">\r\n+                <img\r\n+                  :src=\"job.companyLogo\"\r\n+                  :alt=\"`${job.companyLogo} logo`\"\r\n+                  class=\"job-logo me-3\"\r\n+                />\r\n+                <div>\r\n+                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n+                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n                 </div>\r\n-  \r\n-                <!-- Card Body -->\r\n-                <div class=\"card-body\">\r\n-                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n-                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n-                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n+              </div>\r\n+\r\n+              <!-- Card Body -->\r\n+              <div class=\"card-body\">\r\n+                <p><strong>Location:</strong> {{ job.location }}</p>\r\n+                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n+                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n+                <p><strong>Description:</strong> {{ job.description }}</p>\r\n+              </div>\r\n+\r\n+              <!-- Card Buttons -->\r\n+              <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n+                <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n+                  Apply\r\n+                </RouterLink>\r\n+\r\n+                <div>\r\n+                  <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n+                    <i class=\"bi bi-eye\"></i> View\r\n+                  </RouterLink>\r\n+                  <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n+                    <i class=\"bi bi-pencil\"></i> Edit\r\n+                  </RouterLink>\r\n                 </div>\r\n-  \r\n-                <!-- Card Buttons -->\r\n-                <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n-                  <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n-                    Apply\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <!-- Pagination -->\r\n+        <div class=\"pagination mt-4\">\r\n+          <button\r\n+            class=\"btn btn-secondary\"\r\n+            @click=\"prevPage\"\r\n+            :disabled=\"currentPage === 1\"\r\n+          >\r\n+            Prev\r\n+          </button>\r\n+          <span class=\"mx-2\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n+          <button\r\n+            class=\"btn btn-secondary\"\r\n+            @click=\"nextPage\"\r\n+            :disabled=\"currentPage === totalPages\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <!-- Error State -->\r\n+      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n+    </div>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script>\r\n+import api from \"@/services/api.js\";\r\n+\r\n+export default {\r\n+  data() {\r\n+    return {\r\n+      jobs: null,\r\n+      loading: false,\r\n+      error: false,\r\n+      currentPage: 1,\r\n+      perPage: 6,\r\n+    };\r\n+  },\r\n+\r\n+  computed: {\r\n+    totalPages() {\r\n+      return Math.ceil(this.jobs.length / this.perPage);\r\n+    },\r\n+    paginatedJobs() {\r\n\\ No newline at end of file\n+      const start = (this.currentPage - 1) * this.perPage;\r\n+      const end = start + this.perPage;\r\n+      return this.jobs.slice(start, end);\r\n+    },\r\n+  },\r\n+\r\n+  methods: {\r\n+    async fetchJobs() {\r\n+      this.loading = true;\r\n+      this.error = null;\r\n+      try {\r\n+        const response = await api.getJobPortals(); // Fetch jobs from the API\r\n+        this.jobs = response.data.data; // Access the job data\r\n+      } catch (error) {\r\n+        this.error = \"Failed to load jobs. Please try again.\";\r\n+      } finally {\r\n+        this.loading = false;\r\n+      }\r\n+    },\r\n+    prevPage() {\r\n+      if (this.currentPage > 1) {\r\n+        this.currentPage--;\r\n+      }\r\n+    },\r\n+    nextPage() {\r\n+      if (this.currentPage < this.totalPages) {\r\n+        this.currentPage++;\r\n+      }\r\n+    },\r\n+  },\r\n+\r\n+  mounted() {\r\n+    this.fetchJobs(); // Fetch jobs when the component is mounted\r\n+  },\r\n+};\r\n+</script>\r\n+\r\n+<style scoped>\r\n+.life {\r\n+  background-position: center;\r\n+  background-size: cover;\r\n+  background-repeat: no-repeat;\r\n+}\r\n+\r\n+.loading-state {\r\n+  display: flex;\r\n+  justify-content: center;\r\n+  align-items: center;\r\n+  font-size: 1rem;\r\n+}\r\n+\r\n+.job-logo {\r\n+  width: 40px;\r\n+  height: 40px;\r\n+  border-radius: 50%;\r\n+}\r\n+\r\n+.job-body {\r\n+  margin-top: 0.5rem;\r\n+}\r\n+\r\n+.card-body {\r\n+  background: #ddd;\r\n+}\r\n+\r\n+.card-btn .btn {\r\n+  font-size: 0.9rem;\r\n+  padding: 0.5rem 1rem;\r\n+}\r\n+\r\n+.error ```vue\r\n+{\r\n+  color: red;\r\n+  font-weight: bold;\r\n+}\r\n+\r\n+.pagination {\r\n+  display: flex;\r\n+  justify-content: center;\r\n+  align-items: center;\r\n+}\r\n+</style>\r\n+``` **Updated Code with Pagination**\r\n+\r\n+```vue\r\n+<template>\r\n+  <div class=\"life\">\r\n+    <div id=\"job-container\" class=\"container mt-4\">\r\n+      <!-- Loading State -->\r\n+      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n+\r\n+      <!-- Job Cards -->\r\n+      <div v-else>\r\n+        <div class=\"row\">\r\n+          <div\r\n+            v-for=\"job in paginatedJobs\"\r\n+            :key=\"job.id\"\r\n+            class=\"col-md-4 mb-4\"\r\n+          >\r\n+            <div class=\"card h-100\">\r\n+              <!-- Card Header -->\r\n+              <div class=\"card-header d-flex align-items-center\">\r\n+                <img\r\n+                  :src=\"job.companyLogo\"\r\n+                  :alt=\"`${job.companyLogo} logo`\"\r\n+                  class=\"job-logo me-3\"\r\n+                />\r\n+                <div>\r\n+                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n+                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <!-- Card Body -->\r\n+              <div class=\"card-body\">\r\n+                <p><strong>Location:</strong> {{ job.location }}</p>\r\n+                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n+                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n+                <p><strong>Description:</strong> {{ job.description }}</p>\r\n+              </div>\r\n+\r\n+              <!-- Card Buttons -->\r\n+              <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n+                <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n+                  Apply\r\n+                </RouterLink>\r\n+\r\n+                <div>\r\n+                  <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n+                    <i class=\"bi bi-eye\"></i> View\r\n                   </RouterLink>\r\n-  \r\n-                  <div>\r\n-                \r\n-                    <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n-                    <i class=\"bi bi-eye\"></i> View\r\n-                    </RouterLink>\r\n-                    <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n-                        <i class=\"bi bi-pencil\"></i> Edit\r\n-                    </RouterLink>\r\n-                    \r\n-                   \r\n-                  </div>\r\n+                  <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n+                    <i class=\"bi bi-pencil\"></i> Edit\r\n+                  </RouterLink>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n-  \r\n-        <!-- Error State -->\r\n-        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n+\r\n+        <!-- Pagination -->\r\n+        <div class=\"pagination mt-4\">\r\n+          <button\r\n+            class=\"btn btn-secondary\"\r\n+            @click=\"prevPage\"\r\n+            :disabled=\"currentPage === 1\"\r\n+          >\r\n+            Prev\r\n+          </button>\r\n+          <span class=\"mx-2\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n+          <button\r\n+            class=\"btn btn-secondary\"\r\n+            @click=\"nextPage\"\r\n+            :disabled=\"currentPage === totalPages\"\r\n+          >\r\n+            Next\r\n+          </button>\r\n+        </div>\r\n       </div>\r\n+\r\n+      <!-- Error State -->\r\n+      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n     </div>\r\n-  </template>\r\n-  \r\n-  <script>\r\n-  import api from \"@/services/api.js\";\r\n-  \r\n-  export default {\r\n-    data() {\r\n-      return {\r\n-        jobs: null,\r\n-        loading: false,\r\n-        error: false,\r\n-      };\r\n+  </div>\r\n+</template>\r\n+\r\n+<script>\r\n+import api from \"@/services/api.js\";\r\n+\r\n+export default {\r\n+  data() {\r\n+    return {\r\n+      jobs: null,\r\n+      loading: false,\r\n+      error: false,\r\n+      currentPage: 1,\r\n+      perPage: 6,\r\n+    };\r\n+  },\r\n+\r\n+  computed: {\r\n+    totalPages() {\r\n+      return Math.ceil(this.jobs.length / this.perPage);\r\n     },\r\n-  \r\n-    methods: {\r\n-      async fetchJobs() {\r\n-        this.loading = true;\r\n-        this.error = null;\r\n-        try {\r\n-          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-          this.jobs = response.data.data; // Access the job data\r\n-        } catch (error) {\r\n-          this.error = \"Failed to load jobs. Please try again.\";\r\n-        } finally {\r\n-          this.loading = false;\r\n-        }\r\n-      },\r\n+    paginatedJobs() {\r\n+      const start = (this.currentPage - 1) * this.perPage;\r\n+      const end = start + this.perPage;\r\n+      return this.jobs.slice(start, end);\r\n     },\r\n-  \r\n-    mounted() {\r\n-      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n+  },\r\n+\r\n+  methods: {\r\n+    async fetchJobs() {\r\n+      this.loading = true;\r\n+      this.error = null;\r\n+      try {\r\n+        const response = await api.getJobPortals(); // Fetch jobs from the API\r\n+        this.jobs = response.data.data; // Access the job data\r\n+      } catch (error) {\r\n+        this.error = \"Failed to load jobs. Please try again.\";\r\n+      } finally {\r\n+        this.loading = false;\r\n+      }\r\n     },\r\n-  };\r\n-  </script>\r\n-  \r\n-  <style scoped>\r\n-  .life {\r\n-    background-position: center;\r\n-    background-size: cover;\r\n-    background-repeat: no-repeat;\r\n-  }\r\n-  \r\n-  .loading-state {\r\n-    display: flex;\r\n-    justify-content: center;\r\n-    align-items: center;\r\n-    font-size: 1rem;\r\n-  }\r\n-  \r\n-  .job-logo {\r\n-    width: 40px;\r\n-    height: 40px;\r\n-    border-radius: 50%;\r\n-  }\r\n-  \r\n-  .job-body {\r\n-    margin-top: 0.5rem;\r\n-  }\r\n-  \r\n-  .card-body {\r\n-    background: #ddd;\r\n-  }\r\n-  \r\n-  .card-btn .btn {\r\n-    font-size: 0.9rem;\r\n-    padding: 0.5rem 1rem;\r\n-  }\r\n-  \r\n-  .error {\r\n-    color: red;\r\n-    font-weight: bold;\r\n-  }\r\n-  </style>\r\n-  \n+    prevPage() {\r\n+      if (this.currentPage > 1) {\r\n+        this.currentPage--;\r\n+      }\r\n+    },\r\n+    nextPage() {\r\n+      if (this.currentPage < this.totalPages) {\r\n+        this.currentPage++;\r\n+      }\r\n+    },\r\n+  },\r\n+\r\n+  mounted() {\r\n+    this.fetchJobs(); // Fetch jobs when the component is mounted\r\n+  },\r\n+};\r\n+</script>\r\n+\r\n+<style scoped>\r\n+.life {\r\n+  background-position: center;\r\n+  background-size: cover;\r\n+  background-repeat: no-repeat;\r\n+}\r\n+\r\n+.loading-state {\r\n+  display: flex;\r\n+  justify-content: center;\r\n+  align-items: center;\r\n+  font-size: 1rem;\r\n+}\r\n+\r\n+.job-logo {\r\n+  width: 40px;\r\n+  height: 40px;\r\n+  border-radius: 50%;\r\n+}\r\n+\r\n+.job-body {\r\n+  margin-top: 0.5rem;\r\n+}\r\n+\r\n+.card-body\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736346959125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,168 +180,4 @@\n   align-items: center;\r\n }\r\n </style>\r\n ``` **Updated Code with Pagination**\r\n-\r\n-```vue\r\n-<template>\r\n-  <div class=\"life\">\r\n-    <div id=\"job-container\" class=\"container mt-4\">\r\n-      <!-- Loading State -->\r\n-      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n-\r\n-      <!-- Job Cards -->\r\n-      <div v-else>\r\n-        <div class=\"row\">\r\n-          <div\r\n-            v-for=\"job in paginatedJobs\"\r\n-            :key=\"job.id\"\r\n-            class=\"col-md-4 mb-4\"\r\n-          >\r\n-            <div class=\"card h-100\">\r\n-              <!-- Card Header -->\r\n-              <div class=\"card-header d-flex align-items-center\">\r\n-                <img\r\n-                  :src=\"job.companyLogo\"\r\n-                  :alt=\"`${job.companyLogo} logo`\"\r\n-                  class=\"job-logo me-3\"\r\n-                />\r\n-                <div>\r\n-                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n-                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n-                </div>\r\n-              </div>\r\n-\r\n-              <!-- Card Body -->\r\n-              <div class=\"card-body\">\r\n-                <p><strong>Location:</strong> {{ job.location }}</p>\r\n-                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n-                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                <p><strong>Description:</strong> {{ job.description }}</p>\r\n-              </div>\r\n-\r\n-              <!-- Card Buttons -->\r\n-              <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n-                <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n-                  Apply\r\n-                </RouterLink>\r\n-\r\n-                <div>\r\n-                  <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n-                    <i class=\"bi bi-eye\"></i> View\r\n-                  </RouterLink>\r\n-                  <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n-                    <i class=\"bi bi-pencil\"></i> Edit\r\n-                  </RouterLink>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <!-- Pagination -->\r\n-        <div class=\"pagination mt-4\">\r\n-          <button\r\n-            class=\"btn btn-secondary\"\r\n-            @click=\"prevPage\"\r\n-            :disabled=\"currentPage === 1\"\r\n-          >\r\n-            Prev\r\n-          </button>\r\n-          <span class=\"mx-2\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n-          <button\r\n-            class=\"btn btn-secondary\"\r\n-            @click=\"nextPage\"\r\n-            :disabled=\"currentPage === totalPages\"\r\n-          >\r\n-            Next\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <!-- Error State -->\r\n-      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n-    </div>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script>\r\n-import api from \"@/services/api.js\";\r\n-\r\n-export default {\r\n-  data() {\r\n-    return {\r\n-      jobs: null,\r\n-      loading: false,\r\n-      error: false,\r\n-      currentPage: 1,\r\n-      perPage: 6,\r\n-    };\r\n-  },\r\n-\r\n-  computed: {\r\n-    totalPages() {\r\n-      return Math.ceil(this.jobs.length / this.perPage);\r\n-    },\r\n-    paginatedJobs() {\r\n-      const start = (this.currentPage - 1) * this.perPage;\r\n-      const end = start + this.perPage;\r\n-      return this.jobs.slice(start, end);\r\n-    },\r\n-  },\r\n-\r\n-  methods: {\r\n-    async fetchJobs() {\r\n-      this.loading = true;\r\n-      this.error = null;\r\n-      try {\r\n-        const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-        this.jobs = response.data.data; // Access the job data\r\n-      } catch (error) {\r\n-        this.error = \"Failed to load jobs. Please try again.\";\r\n-      } finally {\r\n-        this.loading = false;\r\n-      }\r\n-    },\r\n-    prevPage() {\r\n-      if (this.currentPage > 1) {\r\n-        this.currentPage--;\r\n-      }\r\n-    },\r\n-    nextPage() {\r\n-      if (this.currentPage < this.totalPages) {\r\n-        this.currentPage++;\r\n-      }\r\n-    },\r\n-  },\r\n-\r\n-  mounted() {\r\n-    this.fetchJobs(); // Fetch jobs when the component is mounted\r\n-  },\r\n-};\r\n-</script>\r\n-\r\n-<style scoped>\r\n-.life {\r\n-  background-position: center;\r\n-  background-size: cover;\r\n-  background-repeat: no-repeat;\r\n-}\r\n-\r\n-.loading-state {\r\n-  display: flex;\r\n-  justify-content: center;\r\n-  align-items: center;\r\n-  font-size: 1rem;\r\n-}\r\n-\r\n-.job-logo {\r\n-  width: 40px;\r\n-  height: 40px;\r\n-  border-radius: 50%;\r\n-}\r\n-\r\n-.job-body {\r\n-  margin-top: 0.5rem;\r\n-}\r\n-\r\n-.card-body\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736346990393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,5 +179,5 @@\n   justify-content: center;\r\n   align-items: center;\r\n }\r\n </style>\r\n-``` **Updated Code with Pagination**\r\n+\r\n"
                },
                {
                    "date": 1736346998704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n   font-size: 0.9rem;\r\n   padding: 0.5rem 1rem;\r\n }\r\n \r\n-.error ```vue\r\n+.e\r\n {\r\n   color: red;\r\n   font-weight: bold;\r\n }\r\n@@ -179,5 +179,4 @@\n   justify-content: center;\r\n   align-items: center;\r\n }\r\n </style>\r\n-\r\n"
                },
                {
                    "date": 1736347015335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n   font-size: 0.9rem;\r\n   padding: 0.5rem 1rem;\r\n }\r\n \r\n-.e\r\n+.error ```vue\r\n {\r\n   color: red;\r\n   font-weight: bold;\r\n }\r\n"
                },
                {
                    "date": 1736347020700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n   font-size: 0.9rem;\r\n   padding: 0.5rem 1rem;\r\n }\r\n \r\n-.error ```vue\r\n+.error \r\n {\r\n   color: red;\r\n   font-weight: bold;\r\n }\r\n"
                },
                {
                    "date": 1736347068917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       this.loading = true;\r\n       this.error = null;\r\n       try {\r\n         const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-        this.jobs = response.data.data; // Access the job data\r\n+        this.jobs = response.data.data; \r\n       } catch (error) {\r\n         this.error = \"Failed to load jobs. Please try again.\";\r\n       } finally {\r\n         this.loading = false;\r\n@@ -167,9 +167,9 @@\n   font-size: 0.9rem;\r\n   padding: 0.5rem 1rem;\r\n }\r\n \r\n-.error \r\n+.error\r\n {\r\n   color: red;\r\n   font-weight: bold;\r\n }\r\n"
                },
                {
                    "date": 1736347220060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       this.loading = true;\r\n       this.error = null;\r\n       try {\r\n         const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-        this.jobs = response.data.data; \r\n+        this.jobs = response.data.data; // Access the job data\r\n       } catch (error) {\r\n         this.error = \"Failed to load jobs. Please try again.\";\r\n       } finally {\r\n         this.loading = false;\r\n@@ -167,9 +167,9 @@\n   font-size: 0.9rem;\r\n   padding: 0.5rem 1rem;\r\n }\r\n \r\n-.error\r\n+.error ```vue\r\n {\r\n   color: red;\r\n   font-weight: bold;\r\n }\r\n@@ -179,4 +179,5 @@\n   justify-content: center;\r\n   align-items: center;\r\n }\r\n </style>\r\n+\r\n"
                }
            ],
            "date": 1736346409079,
            "name": "Commit-0",
            "content": "<template>\r\n  \r\n    <div class=\"life\">\r\n      <div id=\"job-container\" class=\"container mt-4\">\r\n        <!-- Loading State -->\r\n        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n  \r\n        <!-- Job Cards -->\r\n        <div v-else>\r\n          <div class=\"row\">\r\n            <div\r\n              v-for=\"job in jobs\"\r\n              :key=\"job.id\"\r\n              class=\"col-md-4 mb-4\"\r\n            >\r\n              <div class=\"card h-100\">\r\n                <!-- Card Header -->\r\n                <div class=\"card-header d-flex align-items-center\">\r\n                  <img\r\n                    :src=\"job.companyLogo\"\r\n                    :alt=\"`${job.companyLogo} logo`\"\r\n                    class=\"job-logo me-3\"\r\n                  />\r\n                  <div>\r\n                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n                  </div>\r\n                </div>\r\n  \r\n                <!-- Card Body -->\r\n                <div class=\"card-body\">\r\n                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n                </div>\r\n  \r\n                <!-- Card Buttons -->\r\n                <div class=\"card-btn m-3 d-flex justify-content-between\">\r\n                  <RouterLink to=\"/applyJob\" class=\"btn btn-success\">\r\n                    Apply\r\n                  </RouterLink>\r\n  \r\n                  <div>\r\n                \r\n                    <RouterLink :to=\"`/viewjob/${job.id}`\" class=\"btn btn-primary me-2\">\r\n                    <i class=\"bi bi-eye\"></i> View\r\n                    </RouterLink>\r\n                    <RouterLink :to=\"`/editjob/${job.id}`\" class=\"btn btn-warning\">\r\n                        <i class=\"bi bi-pencil\"></i> Edit\r\n                    </RouterLink>\r\n                    \r\n                   \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Error State -->\r\n        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from \"@/services/api.js\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        jobs: null,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    },\r\n  \r\n    methods: {\r\n      async fetchJobs() {\r\n        this.loading = true;\r\n        this.error = null;\r\n        try {\r\n          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n          this.jobs = response.data.data; // Access the job data\r\n        } catch (error) {\r\n          this.error = \"Failed to load jobs. Please try again.\";\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n    },\r\n  \r\n    mounted() {\r\n      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .life {\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n  }\r\n  \r\n  .loading-state {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .job-logo {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .job-body {\r\n    margin-top: 0.5rem;\r\n  }\r\n  \r\n  .card-body {\r\n    background: #ddd;\r\n  }\r\n  \r\n  .card-btn .btn {\r\n    font-size: 0.9rem;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    font-weight: bold;\r\n  }\r\n  </style>\r\n  "
        }
    ]
}