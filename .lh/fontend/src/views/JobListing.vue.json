{
    "sourceFile": "fontend/src/views/JobListing.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1736345270055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736345526718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,121 +1,226 @@\n <template>\r\n-    \r\n-    <div class=\"life\">\r\n-      <div id=\"job-container\" class=\"container mt-4\">\r\n-        <!-- Loading State -->\r\n-        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n-  \r\n-        <!-- Job Cards -->\r\n-        <div v-else>\r\n-          <div class=\"row\">\r\n-            <div\r\n-              v-for=\"job in jobs\"\r\n-              :key=\"job.id\"\r\n-              class=\"col-md-4 mb-4\"\r\n-            >\r\n-              <div class=\"card h-100\">\r\n-                <!-- Card Header -->\r\n-                <div class=\"card-header d-flex align-items-center\">\r\n-                  <img\r\n-                    :src=\"job.companyLogo\"\r\n-                    :alt=\"`${job.companyLogo} logo`\"\r\n-                    class=\"job-logo me-3\"\r\n-                  />\r\n-                  <!-- <img \r\n-                  src=\"https://via.placeholder.com/100x100.png/00dd44?text=Logo\" alt=\"Test Logo\" class=\"job-logo me-3\" /> -->\r\n-                  <div>\r\n-                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n-                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n-                  </div>\r\n+  <div class=\"life\">\r\n+    <div id=\"job-container\" class=\"container mt-4\">\r\n+      <!-- Search Section -->\r\n+      <div class=\"search-section mb-4\">\r\n+        <div class=\"row\">\r\n+          <div class=\"col-md-8 mx-auto\">\r\n+            <div class=\"input-group\">\r\n+              <input\r\n+                type=\"text\"\r\n+                class=\"form-control\"\r\n+                v-model=\"searchQuery\"\r\n+                :placeholder=\"`Search by ${searchFilter}...`\"\r\n+                @keyup.enter=\"handleSearch\"\r\n+              />\r\n+              <select class=\"form-select\" v-model=\"searchFilter\" style=\"max-width: 150px;\">\r\n+                <option value=\"companyName\">Company</option>\r\n+                <option value=\"post\">Position</option>\r\n+                <option value=\"location\">Location</option>\r\n+              </select>\r\n+              <button class=\"btn btn-primary\" @click=\"handleSearch\">\r\n+                Search\r\n+              </button>\r\n+              <button class=\"btn btn-secondary\" @click=\"clearSearch\" v-if=\"isSearchActive\">\r\n+                Clear\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <!-- Loading State -->\r\n+      <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n+\r\n+      <!-- No Results Message -->\r\n+      <div v-else-if=\"filteredJobs.length === 0\" class=\"text-center my-4\">\r\n+        No jobs found matching your search criteria.\r\n+      </div>\r\n+\r\n+      <!-- Job Cards -->\r\n+      <div v-else>\r\n+        <div class=\"row\">\r\n+          <div\r\n+            v-for=\"job in filteredJobs\"\r\n+            :key=\"job.id\"\r\n+            class=\"col-md-4 mb-4\"\r\n+          >\r\n+            <div class=\"card h-100\">\r\n+              <!-- Card Header -->\r\n+              <div class=\"card-header d-flex align-items-center\">\r\n+                <img\r\n+                  :src=\"job.companyLogo\"\r\n+                  :alt=\"`${job.companyLogo} logo`\"\r\n+                  class=\"job-logo me-3\"\r\n+                />\r\n+                <div>\r\n+                  <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n+                  <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n                 </div>\r\n-  \r\n-                <!-- Card Body -->\r\n-                <div class=\"card-body\">\r\n-                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n-                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n-                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n-                </div>\r\n-                <div class=\"card-btn m-3 text-end\">\r\n-                  <button class=\"btn btn-success\" type=\"button\">\r\n-                    <RouterLink to=\"/applyJob\" class=\"nav-link\">Apply</RouterLink>\r\n-                  </button>\r\n-                </div>\r\n               </div>\r\n+\r\n+              <!-- Card Body -->\r\n+              <div class=\"card-body\">\r\n+                <p><strong>Location:</strong> {{ job.location }}</p>\r\n+                <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n+                <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n+                <p><strong>Description:</strong> {{ job.description }}</p>\r\n+              </div>\r\n+              <div class=\"card-btn m-3 text-end\">\r\n+                <button class=\"btn btn-success\" type=\"button\">\r\n+                  <RouterLink to=\"/applyJob\" class=\"nav-link\">Apply</RouterLink>\r\n+                </button>\r\n+              </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n-  \r\n-        <!-- Error State -->\r\n-        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n       </div>\r\n\\ No newline at end of file\n+\r\n+      <!-- Error State -->\r\n+      <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n     </div>\r\n-  </template>\r\n-  \r\n-  <script>\r\n-  import api from \"@/services/api.js\";\r\n-  \r\n-  export default {\r\n-    data() {\r\n-      return {\r\n-        jobs: null,\r\n-        loading: false,\r\n-        error: false,\r\n-      };\r\n+  </div>\r\n+</template>\r\n+\r\n+<script>\r\n+import api from \"@/services/api.js\";\r\n+\r\n+export default {\r\n+  data() {\r\n+    return {\r\n+      jobs: [],\r\n+      loading: false,\r\n+      error: null,\r\n+      searchQuery: \"\",\r\n+      searchFilter: \"companyName\",\r\n+      isSearchActive: false\r\n+    };\r\n+  },\r\n+\r\n+  computed: {\r\n+    filteredJobs() {\r\n+      if (!this.searchQuery) return this.jobs;\r\n+\r\n+      const query = this.searchQuery.toLowerCase();\r\n+      return this.jobs.filter(job => {\r\n+        const value = String(job[this.searchFilter]).toLowerCase();\r\n+        return value.includes(query);\r\n+      });\r\n+    }\r\n+  },\r\n+\r\n+  methods: {\r\n+    async fetchJobs() {\r\n+      this.loading = true;\r\n+      this.error = null;\r\n+      try {\r\n+        const response = await api.getJobPortals();\r\n+        this.jobs = response.data.data;\r\n+      } catch (error) {\r\n+        this.error = \"Failed to load jobs. Please try again.\";\r\n+        console.error(\"Error fetching jobs:\", error);\r\n+      } finally {\r\n+        this.loading = false;\r\n+      }\r\n     },\r\n-  \r\n-    methods: {\r\n-      async fetchJobs() {\r\n-        this.loading = true;\r\n-        this.error = null;\r\n-        try {\r\n-          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n-          // Adjust for API response where job data is stored under `jobportals`\r\n-          this.jobs = response.data.data; // Access the `jobportals` key\r\n-        } catch (error) {\r\n-          this.error = \"Failed to load jobs. Please try again.\";\r\n-        } finally {\r\n-          this.loading = false;\r\n-        }\r\n-      },\r\n+\r\n+    async handleSearch() {\r\n+      if (!this.searchQuery.trim()) {\r\n+        return;\r\n+      }\r\n+\r\n+      this.loading = true;\r\n+      this.error = null;\r\n+      this.isSearchActive = true;\r\n+\r\n+      try {\r\n+        const response = await api.searchJobPortals({\r\n+          [this.searchFilter]: this.searchQuery.trim()\r\n+        });\r\n+        this.jobs = response.data.data;\r\n+      } catch (error) {\r\n+        this.error = \"Failed to perform search. Please try again.\";\r\n+        console.error(\"Search error:\", error);\r\n+      } finally {\r\n+        this.loading = false;\r\n+      }\r\n     },\r\n-  \r\n-    mounted() {\r\n-      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n-    },\r\n-  };\r\n-  </script>\r\n-  \r\n-  <style scoped>\r\n-  .life {\r\n-    background-position: center;\r\n-    background-size: cover;\r\n-    background-repeat: no-repeat;\r\n+\r\n+    clearSearch() {\r\n+      this.searchQuery = \"\";\r\n+      this.isSearchActive = false;\r\n+      this.fetchJobs();\r\n+    }\r\n+  },\r\n+\r\n+  mounted() {\r\n+    this.fetchJobs();\r\n   }\r\n-  \r\n-  .loading-state {\r\n-    display: flex;\r\n-    justify-content: center;\r\n-    align-items: center;\r\n-    font-size: 1rem;\r\n+};\r\n+</script>\r\n+\r\n+<style scoped>\r\n+.life {\r\n+  background-position: center;\r\n+  background-size: cover;\r\n+  background-repeat: no-repeat;\r\n+}\r\n+\r\n+.search-section {\r\n+  background-color: #f8f9fa;\r\n+  padding: 20px;\r\n+  border-radius: 8px;\r\n+  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n+}\r\n+\r\n+.loading-state {\r\n+  display: flex;\r\n+  justify-content: center;\r\n+  align-items: center;\r\n+  font-size: 1rem;\r\n+}\r\n+\r\n+.job-logo {\r\n+  width: 40px;\r\n+  height: 40px;\r\n+  border-radius: 50%;\r\n+  object-fit: cover;\r\n+}\r\n+\r\n+.job-body {\r\n+  margin-top: 0.5rem;\r\n+}\r\n+\r\n+.card-body {\r\n+  background: #f8f9fa;\r\n+}\r\n+\r\n+.error {\r\n+  color: red;\r\n+  font-weight: bold;\r\n+}\r\n+\r\n+.nav-link {\r\n+  color: white;\r\n+  text-decoration: none;\r\n+}\r\n+\r\n+.form-select {\r\n+  border-left: none;\r\n+}\r\n+\r\n+.btn-secondary {\r\n+  margin-left: 5px;\r\n+}\r\n+\r\n+/* Responsive adjustments */\r\n+@media (max-width: 768px) {\r\n+  .search-section .input-group {\r\n+    flex-wrap: nowrap;\r\n   }\r\n   \r\n-  .job-logo {\r\n-    width: 40px;\r\n-    height: 40px;\r\n-    border-radius: 50%;\r\n+  .col-md-4 {\r\n+    margin-bottom: 1rem;\r\n   }\r\n-  \r\n-  .job-body {\r\n-    margin-top: 0.5rem;\r\n-  }\r\n-  .card-body {\r\n-    background: #ddd;\r\n-  }\r\n-  \r\n-  .error {\r\n-    color: red;\r\n-    font-weight: bold;\r\n-  }\r\n-  </style>\r\n-  \n+}\r\n+</style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736346016858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,17 +32,17 @@\n       <!-- Loading State -->\r\n       <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n \r\n       <!-- No Results Message -->\r\n-      <div v-else-if=\"filteredJobs.length === 0\" class=\"text-center my-4\">\r\n+      <div v-else-if=\"paginatedJobs.length === 0\" class=\"text-center my-4\">\r\n         No jobs found matching your search criteria.\r\n       </div>\r\n \r\n       <!-- Job Cards -->\r\n       <div v-else>\r\n         <div class=\"row\">\r\n           <div\r\n-            v-for=\"job in filteredJobs\"\r\n+            v-for=\"job in paginatedJobs\"\r\n             :key=\"job.id\"\r\n             class=\"col-md-4 mb-4\"\r\n           >\r\n             <div class=\"card h-100\">\r\n@@ -63,9 +63,9 @@\n               <div class=\"card-body\">\r\n                 <p><strong>Location:</strong> {{ job.location }}</p>\r\n                 <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n                 <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n-                <p><strong>Description:</strong> {{ job.description }}</p>\r\n+                <p><strong>Description:</strong> {{ truncateText(job.description, 100) }}</p>\r\n               </div>\r\n               <div class=\"card-btn m-3 text-end\">\r\n                 <button class=\"btn btn-success\" type=\"button\">\r\n                   <RouterLink to=\"/applyJob\" class=\"nav-link\">Apply</RouterLink>\r\n@@ -73,8 +73,37 @@\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n+\r\n+        <!-- Pagination -->\r\n+        <div class=\"pagination-container text-center mt-4\">\r\n+          <nav aria-label=\"Page navigation\">\r\n+            <ul class=\"pagination justify-content-center\">\r\n+              <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n+                <button class=\"page-link\" @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">\r\n+                  Previous\r\n+                </button>\r\n+              </li>\r\n+              <li v-for=\"page in totalPages\" \r\n+                  :key=\"page\" \r\n+                  class=\"page-item\"\r\n+                  :class=\"{ active: currentPage === page }\">\r\n+                <button class=\"page-link\" @click=\"changePage(page)\">\r\n+                  {{ page }}\r\n+                </button>\r\n+              </li>\r\n+              <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n+                <button class=\"page-link\" @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\">\r\n+                  Next\r\n+                </button>\r\n+              </li>\r\n+            </ul>\r\n+          </nav>\r\n+          <div class=\"text-muted\">\r\n+            Showing {{ paginationInfo.from }} to {{ paginationInfo.to }} of {{ filteredJobs.length }} entries\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n \r\n       <!-- Error State -->\r\n       <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n@@ -92,9 +121,11 @@\n       loading: false,\r\n       error: null,\r\n       searchQuery: \"\",\r\n       searchFilter: \"companyName\",\r\n-      isSearchActive: false\r\n+      isSearchActive: false,\r\n+      currentPage: 1,\r\n+      itemsPerPage: 6\r\n     };\r\n   },\r\n \r\n   computed: {\r\n@@ -105,8 +136,24 @@\n       return this.jobs.filter(job => {\r\n         const value = String(job[this.searchFilter]).toLowerCase();\r\n         return value.includes(query);\r\n       });\r\n+    },\r\n+\r\n+    paginatedJobs() {\r\n+      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n+      const end = start + this.itemsPerPage;\r\n+      return this.filteredJobs.slice(start, end);\r\n+    },\r\n+\r\n+    totalPages() {\r\n+      return Math.ceil(this.filteredJobs.length / this.itemsPerPage);\r\n+    },\r\n+\r\n+    paginationInfo() {\r\n+      const from = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n+      const to = Math.min(this.currentPage * this.itemsPerPage, this.filteredJobs.length);\r\n+      return { from, to };\r\n     }\r\n   },\r\n \r\n   methods: {\r\n@@ -115,8 +162,9 @@\n       this.error = null;\r\n       try {\r\n         const response = await api.getJobPortals();\r\n         this.jobs = response.data.data;\r\n+        this.currentPage = 1; // Reset to first page when fetching new data\r\n       } catch (error) {\r\n         this.error = \"Failed to load jobs. Please try again.\";\r\n         console.error(\"Error fetching jobs:\", error);\r\n       } finally {\r\n@@ -131,8 +179,9 @@\n \r\n       this.loading = true;\r\n       this.error = null;\r\n       this.isSearchActive = true;\r\n+      this.currentPage = 1; // Reset to first page when searching\r\n \r\n       try {\r\n         const response = await api.searchJobPortals({\r\n           [this.searchFilter]: this.searchQuery.trim()\r\n@@ -148,14 +197,36 @@\n \r\n     clearSearch() {\r\n       this.searchQuery = \"\";\r\n       this.isSearchActive = false;\r\n+      this.currentPage = 1; // Reset to first page when clearing search\r\n       this.fetchJobs();\r\n+    },\r\n+\r\n+    changePage(page) {\r\n+      if (page >= 1 && page <= this.totalPages) {\r\n+        this.currentPage = page;\r\n+        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+      }\r\n+    },\r\n+\r\n+    truncateText(text, length) {\r\n+      if (text.length <= length) return text;\r\n+      return text.substring(0, length) + '...';\r\n     }\r\n   },\r\n \r\n   mounted() {\r\n     this.fetchJobs();\r\n+  },\r\n+\r\n+  watch: {\r\n+    searchQuery(newVal) {\r\n+      // Reset to first page when search query changes\r\n+      if (!newVal && !this.isSearchActive) {\r\n+        this.currentPage = 1;\r\n+      }\r\n+    }\r\n   }\r\n };\r\n </script>\r\n \r\n@@ -170,57 +241,64 @@\n   background-color: #f8f9fa;\r\n   padding: 20px;\r\n   border-radius: 8px;\r\n   box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n+  margin-bottom: 2rem;\r\n }\r\n \r\n-.loading-state {\r\n-  display: flex;\r\n-  justify-content: center;\r\n-  align-items: center;\r\n-  font-size: 1rem;\r\n-}\r\n-\r\n .job-logo {\r\n   width: 40px;\r\n   height: 40px;\r\n   border-radius: 50%;\r\n   object-fit: cover;\r\n }\r\n \r\n-.job-body {\r\n-  margin-top: 0.5rem;\r\n+.card {\r\n+  transition: transform 0.2s;\r\n+  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n }\r\n \r\n+.card:hover {\r\n+  transform: translateY(-5px);\r\n+}\r\n+\r\n .card-body {\r\n   background: #f8f9fa;\r\n }\r\n \r\n-.error {\r\n-  color: red;\r\n-  font-weight: bold;\r\n+.pagination-container {\r\n+  margin-top: 2rem;\r\n+  padding: 1rem;\r\n+  background-color: #f8f9fa;\r\n+  border-radius: 8px;\r\n }\r\n \r\n-.nav-link {\r\n-  color: white;\r\n-  text-decoration: none;\r\n+.page-link {\r\n+  color: #0d6efd;\r\n+  cursor: pointer;\r\n }\r\n \r\n-.form-select {\r\n-  border-left: none;\r\n+.page-item.active .page-link {\r\n+  background-color: #0d6efd;\r\n+  border-color: #0d6efd;\r\n }\r\n \r\n-.btn-secondary {\r\n-  margin-left: 5px;\r\n+.nav-link {\r\n+  color: white;\r\n+  text-decoration: none;\r\n }\r\n \r\n-/* Responsive adjustments */\r\n @media (max-width: 768px) {\r\n   .search-section .input-group {\r\n     flex-wrap: nowrap;\r\n   }\r\n   \r\n   .col-md-4 {\r\n     margin-bottom: 1rem;\r\n   }\r\n+\r\n+  .pagination {\r\n+    flex-wrap: wrap;\r\n+    justify-content: center;\r\n+  }\r\n }\r\n </style>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1736345270055,
            "name": "Commit-0",
            "content": "<template>\r\n    \r\n    <div class=\"life\">\r\n      <div id=\"job-container\" class=\"container mt-4\">\r\n        <!-- Loading State -->\r\n        <div v-if=\"loading\" class=\"text-center text-info my-4\">Loading jobs...</div>\r\n  \r\n        <!-- Job Cards -->\r\n        <div v-else>\r\n          <div class=\"row\">\r\n            <div\r\n              v-for=\"job in jobs\"\r\n              :key=\"job.id\"\r\n              class=\"col-md-4 mb-4\"\r\n            >\r\n              <div class=\"card h-100\">\r\n                <!-- Card Header -->\r\n                <div class=\"card-header d-flex align-items-center\">\r\n                  <img\r\n                    :src=\"job.companyLogo\"\r\n                    :alt=\"`${job.companyLogo} logo`\"\r\n                    class=\"job-logo me-3\"\r\n                  />\r\n                  <!-- <img \r\n                  src=\"https://via.placeholder.com/100x100.png/00dd44?text=Logo\" alt=\"Test Logo\" class=\"job-logo me-3\" /> -->\r\n                  <div>\r\n                    <h5 class=\"card-title mb-1\">{{ job.companyName }}</h5>\r\n                    <h6 class=\"card-subtitle text-muted\">{{ job.post }}</h6>\r\n                  </div>\r\n                </div>\r\n  \r\n                <!-- Card Body -->\r\n                <div class=\"card-body\">\r\n                  <p><strong>Location:</strong> {{ job.location }}</p>\r\n                  <p><strong>Contract:</strong> {{ job.contract }}</p>\r\n                  <p><strong>Salary:</strong> {{ job.salary }}</p>\r\n                  <p><strong>Description:</strong> {{ job.description }}</p>\r\n                </div>\r\n                <div class=\"card-btn m-3 text-end\">\r\n                  <button class=\"btn btn-success\" type=\"button\">\r\n                    <RouterLink to=\"/applyJob\" class=\"nav-link\">Apply</RouterLink>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Error State -->\r\n        <div v-if=\"error\" class=\"alert alert-danger mt-3 text-center\">{{ error }}</div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from \"@/services/api.js\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        jobs: null,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    },\r\n  \r\n    methods: {\r\n      async fetchJobs() {\r\n        this.loading = true;\r\n        this.error = null;\r\n        try {\r\n          const response = await api.getJobPortals(); // Fetch jobs from the API\r\n          // Adjust for API response where job data is stored under `jobportals`\r\n          this.jobs = response.data.data; // Access the `jobportals` key\r\n        } catch (error) {\r\n          this.error = \"Failed to load jobs. Please try again.\";\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n    },\r\n  \r\n    mounted() {\r\n      this.fetchJobs(); // Fetch jobs when the component is mounted\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .life {\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n  }\r\n  \r\n  .loading-state {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .job-logo {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .job-body {\r\n    margin-top: 0.5rem;\r\n  }\r\n  .card-body {\r\n    background: #ddd;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    font-weight: bold;\r\n  }\r\n  </style>\r\n  "
        }
    ]
}