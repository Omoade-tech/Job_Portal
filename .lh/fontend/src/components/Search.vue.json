{
    "sourceFile": "fontend/src/components/Search.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1736342674293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736344446270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,76 @@\n <template>\r\n   <div class=\"container mt-4\">\r\n     <div class=\"input-group mb-3\">\r\n-      <!-- Dropdown for selecting search parameter -->\r\n       <select\r\n         class=\"form-select w-25\"\r\n         v-model=\"selectedFilter\"\r\n       >\r\n-        <option value=\"name\">Job Name</option>\r\n+        <option value=\"query\">General Search</option>\r\n+        <option value=\"companyName\">Company Name</option>\r\n+        <option value=\"post\">Post</option>\r\n         <option value=\"location\">Location</option>\r\n-        <option value=\"company\">Company</option>\r\n-        <option value=\"post\">Post</option>\r\n+        <option value=\"contract\">Contract Type</option>\r\n       </select>\r\n \r\n-      <!-- Search input -->\r\n       <input\r\n         type=\"text\"\r\n         class=\"form-control\"\r\n         placeholder=\"Enter your search query\"\r\n         v-model=\"searchQuery\"\r\n+        @keyup.enter=\"performSearch\"\r\n       />\r\n \r\n-      <!-- Search button -->\r\n       <button class=\"btn btn-primary\" type=\"button\" @click=\"performSearch\">\r\n         Search\r\n       </button>\r\n     </div>\r\n \r\n-    <!-- Display search results -->\r\n+    <!-- Results section -->\r\n     <div v-if=\"searchResults.length\" class=\"mt-4\">\r\n       <h4>Search Results</h4>\r\n-      <ul class=\"list-group\">\r\n-        <li\r\n-          v-for=\"(job, index) in searchResults\"\r\n-          :key=\"index\"\r\n-          class=\"list-group-item\"\r\n-        >\r\n-          <strong>{{ job.name }}</strong> - {{ job.post }} ({{ job.location }})\r\n-          <p>{{ job.company }}</p>\r\n-        </li>\r\n-      </ul>\r\n+      <div class=\"list-group\">\r\n+        <div v-for=\"job in searchResults\" :key=\"job.id\" class=\"list-group-item\">\r\n+          <div class=\"d-flex justify-content-between align-items-start\">\r\n+            <div>\r\n+              <h5 class=\"mb-1\">{{ job.companyName }}</h5>\r\n+              <p class=\"mb-1\">{{ job.post }}</p>\r\n+              <small>{{ job.location }} â€¢ {{ job.contract }}</small>\r\n+            </div>\r\n+            <div class=\"text-end\">\r\n+              <div class=\"badge bg-primary\">{{ job.salary }}</div>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n-    <div v-else-if=\"searchPerformed\" class=\"mt-4\">\r\n-      <p>No jobs found for your search criteria.</p>\r\n+    \r\n+    <div v-else-if=\"searchPerformed\" class=\"mt-4 text-center\">\r\n+      <p>No jobs found matching your search criteria.</p>\r\n     </div>\r\n+\r\n+    <!-- Loading state -->\r\n+    <div v-if=\"isLoading\" class=\"text-center mt-4\">\r\n+      <div class=\"spinner-border text-primary\" role=\"status\">\r\n+        <span class=\"visually-hidden\">Loading...</span>\r\n+      </div>\r\n+    </div>\r\n   </div>\r\n </template>\r\n \r\n <script>\r\n-import api from \"@/services/api.js\"; // Import your API client\r\n+import api from \"@/services/api.js\";\r\n \r\n export default {\r\n   name: \"Search\",\r\n   data() {\r\n     return {\r\n-      selectedFilter: \"name\", // Default search filter\r\n-      searchQuery: \"\", // User search query\r\n-      searchResults: [], // Holds the search results\r\n-      searchPerformed: false, // Tracks if a search has been performed\r\n+      selectedFilter: \"query\",\r\n+      searchQuery: \"\",\r\n+      searchResults: [],\r\n+      searchPerformed: false,\r\n+      isLoading: false,\r\n+      error: null\r\n     };\r\n   },\r\n   methods: {\r\n     async performSearch() {\r\n@@ -65,47 +78,58 @@\n         alert(\"Please enter a search query.\");\r\n         return;\r\n       }\r\n \r\n+      this.isLoading = true;\r\n+      this.error = null;\r\n+\r\n       try {\r\n-        const searchParams = {\r\n-          [this.selectedFilter]: this.searchQuery, // Dynamically set search filter\r\n-        };\r\n+        const response = await api.searchJobPortals({\r\n+          filterType: this.selectedFilter,\r\n+          query: this.searchQuery.trim()\r\n+        });\r\n \r\n-        const response = await api.searchJobPortals(searchParams); // Call the new searchJobPortals API method\r\n-        this.searchResults = response.data; // Store the results\r\n+        this.searchResults = response.data.data;\r\n         this.searchPerformed = true;\r\n       } catch (error) {\r\n-        console.error(\"Error fetching jobs:\", error);\r\n-        alert(\"An error occurred while performing the search. Please try again.\");\r\n+        this.error = error.response?.data?.message || \"An error occurred while searching\";\r\n+        console.error(\"Search error:\", error);\r\n+        alert(this.error);\r\n+      } finally {\r\n+        this.isLoading = false;\r\n       }\r\n     },\r\n-  },\r\n+\r\n+    clearSearch() {\r\n+      this.searchQuery = \"\";\r\n+      this.searchResults = [];\r\n+      this.searchPerformed = false;\r\n+      this.error = null;\r\n+    }\r\n+  }\r\n };\r\n </script>\r\n \r\n <style scoped>\r\n .input-group {\r\n-  justify-content: center;\r\n-  max-width: 600px;\r\n+  max-width: 800px;\r\n   margin: 0 auto;\r\n }\r\n \r\n-.form-select {\r\n-  max-width: 150px;\r\n-}\r\n-\r\n .list-group {\r\n-  max-width: 600px;\r\n+  max-width: 800px;\r\n   margin: 0 auto;\r\n }\r\n \r\n .list-group-item {\r\n-  display: flex;\r\n-  flex-direction: column;\r\n+  transition: background-color 0.2s;\r\n }\r\n \r\n-.list-group-item p {\r\n-  margin: 0;\r\n-  color: #6c757d;\r\n+.list-group-item:hover {\r\n+  background-color: #f8f9fa;\r\n }\r\n-</style>\r\n+\r\n+.badge {\r\n+  font-size: 0.9rem;\r\n+  padding: 0.5em 1em;\r\n+}\r\n+</style>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1736342674293,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"container mt-4\">\r\n    <div class=\"input-group mb-3\">\r\n      <!-- Dropdown for selecting search parameter -->\r\n      <select\r\n        class=\"form-select w-25\"\r\n        v-model=\"selectedFilter\"\r\n      >\r\n        <option value=\"name\">Job Name</option>\r\n        <option value=\"location\">Location</option>\r\n        <option value=\"company\">Company</option>\r\n        <option value=\"post\">Post</option>\r\n      </select>\r\n\r\n      <!-- Search input -->\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter your search query\"\r\n        v-model=\"searchQuery\"\r\n      />\r\n\r\n      <!-- Search button -->\r\n      <button class=\"btn btn-primary\" type=\"button\" @click=\"performSearch\">\r\n        Search\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Display search results -->\r\n    <div v-if=\"searchResults.length\" class=\"mt-4\">\r\n      <h4>Search Results</h4>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          v-for=\"(job, index) in searchResults\"\r\n          :key=\"index\"\r\n          class=\"list-group-item\"\r\n        >\r\n          <strong>{{ job.name }}</strong> - {{ job.post }} ({{ job.location }})\r\n          <p>{{ job.company }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else-if=\"searchPerformed\" class=\"mt-4\">\r\n      <p>No jobs found for your search criteria.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api.js\"; // Import your API client\r\n\r\nexport default {\r\n  name: \"Search\",\r\n  data() {\r\n    return {\r\n      selectedFilter: \"name\", // Default search filter\r\n      searchQuery: \"\", // User search query\r\n      searchResults: [], // Holds the search results\r\n      searchPerformed: false, // Tracks if a search has been performed\r\n    };\r\n  },\r\n  methods: {\r\n    async performSearch() {\r\n      if (!this.searchQuery.trim()) {\r\n        alert(\"Please enter a search query.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const searchParams = {\r\n          [this.selectedFilter]: this.searchQuery, // Dynamically set search filter\r\n        };\r\n\r\n        const response = await api.searchJobPortals(searchParams); // Call the new searchJobPortals API method\r\n        this.searchResults = response.data; // Store the results\r\n        this.searchPerformed = true;\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n        alert(\"An error occurred while performing the search. Please try again.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input-group {\r\n  justify-content: center;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-select {\r\n  max-width: 150px;\r\n}\r\n\r\n.list-group {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.list-group-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.list-group-item p {\r\n  margin: 0;\r\n  color: #6c757d;\r\n}\r\n</style>\r\n"
        }
    ]
}